{"version":3,"sources":["../../api/controller/meal.controller.js"],"names":["mealController","findAllMeals","req","res","allMeals","MealService","status","json","data","createAMeal","meal","body","name","description","price","type","size","createdMeal","message","error","findAMeal","mealId","params","id","parseInt","updateAMeal","newMeal","updateMeal","removeAMeal","removeMeal"],"mappings":"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","sourcesContent":["import MealService from '../services/meal.service';\r\n\r\nconst mealController = {\r\n  findAllMeals(req, res) {\r\n    const allMeals = MealService.findAllMeals();\r\n    res.status(200).json({\r\n      status: 200,\r\n      data: allMeals,\r\n    });\r\n  },\r\n  createAMeal(req, res) {\r\n    const meal = req.body;\r\n    const {\r\n      name,\r\n      description,\r\n      price,\r\n      type,\r\n      size,\r\n    } = req.body;\r\n    if (name && price && size && description && type) {\r\n      const createdMeal = MealService.createAMeal(meal);\r\n      res.status(201).json({\r\n        status: 'success',\r\n        message: 'meal created',\r\n        data: createdMeal,\r\n      });\r\n    } else {\r\n      res.status(400).json({\r\n        status: 400,\r\n        error: 'Faild all fileds are required',\r\n      });\r\n    }\r\n  },\r\n  findAMeal(req, res) {\r\n    const { mealId } = req.params;\r\n    const id = parseInt(mealId, 10);\r\n    const meal = MealService.findAMeal(id);\r\n    if (meal) {\r\n      res.status(200).json({ data: meal, status: 200 });\r\n    } else {\r\n      res.status(404).json({ status: 404, error: 'That record does not exist' });\r\n    }\r\n  },\r\n  updateAMeal(req, res) {\r\n    const { mealId } = req.params;\r\n    const id = parseInt(mealId, 10);\r\n    const meal = MealService.findAMeal(id);\r\n    const newMeal = req.body;\r\n    if (meal) {\r\n      const updateMeal = MealService.updateAMeal(id, newMeal);\r\n      res.status(201).json({\r\n        status: 201,\r\n        message: 'meal updated',\r\n        data: updateMeal,\r\n      });\r\n    } else {\r\n      res.status(404).json({ status: 404, error: 'That record does not exist' });\r\n    }\r\n  },\r\n  removeAMeal(req, res) {\r\n    const { mealId } = req.params;\r\n    const id = parseInt(mealId, 10);\r\n    const meal = MealService.findAMeal(id);\r\n    if (meal) {\r\n      const removeMeal = MealService.removeAMeal(id);\r\n      res.status(200).json({\r\n        status: 200,\r\n        message: 'meal removed',\r\n        data: removeMeal,\r\n      });\r\n    } else {\r\n      res.status(404).json({ status: 404, error: 'That record does not exist' });\r\n    }\r\n  },\r\n};\r\n\r\nexport default mealController;\r\n"],"file":"meal.controller.js"}