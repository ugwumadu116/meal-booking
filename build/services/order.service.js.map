{"version":3,"sources":["../../api/services/order.service.js"],"names":["orderService","findAllOrders","orders","orderData","map","order","newOrder","Order","id","status","mealQuantity","total","userId","addressId","mealId","createAnOrder","SearchedMeal","MealService","findAMeal","activeOrders","find","myOrder","push","mealPrice","price","totalPrice","lastOrder","length","lastOrderId","newOrderId","createdDate","Date","updatedDate","findAnOrder","index","parseInt","updateAnOrder","indexOf"],"mappings":"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","sourcesContent":["import orderData from '../utils/dummyOrderData';\r\nimport Order from '../models/order.model';\r\nimport MealService from './meal.service';\r\n\r\nconst orderService = {\r\n  findAllOrders() {\r\n    const orders = orderData.orders.map((order) => {\r\n      const newOrder = new Order();\r\n      const {\r\n        id,\r\n        status,\r\n        mealQuantity,\r\n        total,\r\n        userId,\r\n        addressId,\r\n        mealId,\r\n      } = order;\r\n      newOrder.id = id;\r\n      newOrder.status = status;\r\n      newOrder.mealQuantity = mealQuantity;\r\n      newOrder.total = total;\r\n      newOrder.userId = userId;\r\n      newOrder.addressId = addressId;\r\n      newOrder.mealId = mealId;\r\n      return newOrder;\r\n    });\r\n    return orders;\r\n  },\r\n\r\n  createAnOrder(order) {\r\n    const {\r\n      mealQuantity,\r\n      userId,\r\n      addressId,\r\n      mealId,\r\n    } = order;\r\n    const SearchedMeal = MealService.findAMeal(mealId);\r\n    const activeOrders = orderData.orders.find(myOrder => myOrder.status === 'active' && myOrder.userId === userId);\r\n    if (activeOrders) {\r\n      activeOrders.mealId.push(SearchedMeal);\r\n      return activeOrders;\r\n    }\r\n\r\n    const { price: mealPrice } = SearchedMeal;\r\n    const totalPrice = mealPrice * mealQuantity;\r\n\r\n    const lastOrder = orderData.orders.length - 1;\r\n    const lastOrderId = orderData.orders[lastOrder].id;\r\n    const newOrderId = lastOrderId + 1;\r\n\r\n    const newOrder = new Order();\r\n    newOrder.id = newOrderId;\r\n    newOrder.status = 'active';\r\n    newOrder.mealQuantity = mealQuantity;\r\n    newOrder.total = totalPrice;\r\n    newOrder.userId = userId;\r\n    newOrder.addressId = addressId;\r\n    newOrder.mealId.push(SearchedMeal);\r\n    newOrder.createdDate = new Date();\r\n    newOrder.updatedDate = new Date();\r\n    orderData.orders.push(newOrder);\r\n    return newOrder;\r\n  },\r\n  findAnOrder(id) {\r\n    const index = parseInt(id, 10);\r\n    const myOrder = orderData.orders.find(order => order.id === index);\r\n    return myOrder;\r\n  },\r\n\r\n  updateAnOrder(id, newOrder) {\r\n    const order = this.findAnOrder(id);\r\n    const index = orderData.orders.indexOf(order);\r\n    const {\r\n      userId,\r\n      addressId,\r\n      status,\r\n      mealQuantity,\r\n    } = newOrder;\r\n    if (userId === 0) {\r\n      orderData.orders[index].status = status;\r\n    }\r\n    orderData.orders[index].addressId = addressId;\r\n    orderData.orders[index].mealQuantity = mealQuantity;\r\n    orderData.orders[index].updatedDate = new Date();\r\n\r\n    return orderData.orders[index];\r\n  },\r\n};\r\n\r\nexport default orderService;\r\n"],"file":"order.service.js"}